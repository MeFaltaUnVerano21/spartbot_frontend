{"version":3,"sources":["components/CardsHeader.js","components/Graphics.js","components/TableMaterials.js","components/Dashboard.js","components/Forms/FormVerification.js","components/Forms/FormShowcase.js","components/Forms/FormActiveInactive.js","components/Forms/FormTickets.js","components/Forms/FormTranscript.js","components/CardsPlugins.js","components/Plugins.js","components/images/SpartBot_christmas.png","components/NavBar.js","components/Category.js","components/Ticket.js","components/Content.js","components/CardCategory.js","components/Forms/FormAddCategory.js","components/Categories.js","components/Tickets.js","components/DrawerNav.js","components/ServerSelector.js","pages/SelectServer.js","components/images/Panel.png","components/images/TicketsImage.png","components/images/verify.png","components/images/showcase.png","components/images/discord_logo.png","pages/landing.js","routes/Routes.js","index.js"],"names":["CardHeader","props","clases","makeStyles","root","textAlign","background","color","text","fontSize","font","title","fontWeight","useStyles","Card","className","CardContent","icon","Typography","Graphics","StyledTableCell","withStyles","head","body","TableCell","TableMaterials","TableContainer","Table","TableHead","TableRow","TableBody","data","map","element","new","align","date","changes","id","flexGrow","icons","containerGraphics","marginTop","containerTable","Content","loading","size","speed","style","marginLeft","marginButtom","Grid","container","spacing","item","xs","sm","md","lg","GuildName","GuildMembers","GuildChannels","FormVerification","greenTheme","createMuiTheme","palette","primary","main","contrastText","theme","margin","submit","selectField","width","minWidth","borderColor","borderBottomColor","CssTextField","TextField","classes","useForm","register","handleSubmit","errors","control","useState","onSubmitCurrent","formType","console","log","fetch","url","method","headers","JSON","stringify","then","response","json","onChange","onSubmitNew","menuOptionsChannels","menuOptionsRoles","Channel","Channels","push","MenuItem","value","String","getChannels","Role","Roles","getRoles","fullWidth","label","multiline","rows","defaultValue","variant","inputRef","name","FormControl","error","Boolean","channel","InputLabel","as","Select","rules","required","FormHelperText","message","role","ThemeProvider","Button","startIcon","type","onClick","FormShowcase","FormActiveInactive","menuOptionsCategories","Categories","getCategories","activeCategory","inactiveCategory","FormTickets","FormTranscript","toast","configure","CardPlugin","checked","toggled","setToggled","switchStyles","useIosSwitchStyles","switcher","formControl","paper","display","flexDirection","alignItems","avatar","backgroundColor","secondary","form","notchedOutline","borderWidth","padding","DialogTitle","closeButton","position","right","top","grey","children","onClose","other","disableTypography","IconButton","aria-label","DialogContent","MuiDialogContent","MuiDialogActions","open","setOpen","handleClose","handleNotification","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","success","selectedForm","formSelect","Dialog","aria-labelledby","direction","dividers","Switch","localStorage","setItem","onSubmit","target","Plugins","setData","setLoading","useEffect","a","response_json","getData","parseInt","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","content","menuButton","marginRight","leftMenu","fontFamily","textDecoration","menu","paddingLeft","menuNav","breakpoints","down","sizeSelect","navDisplayFlex","linkText","textTransform","rightToolbar","darkTheme","NavBar","SetUser","SetAvatar","servers","setServers","auth","setAuth","anchorEl","setAnchorEl","styles2","useOnlineAvatarStyles","thickness","gap","avatar_url","guilds","dashboard","setDashboard","serverid","setServerid","location","pathname","includes","server","replace","CssBaseline","AppBar","Toolbar","to","src","SpartBot","height","borderRadius","edge","href","component","labelId","Name","aria-controls","aria-haspopup","event","currentTarget","Avatar","altr","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","section","categories","button","details","Category","showResults","setShowResults","TicketCategory","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","Ticket","ticketid","List","username","update","setUpdate","x","category","CardCategory","CardActionArea","maxWidth","FormAddCategory","emoji","Emoji","demo","shadowColor","justifyContent","marginBottom","emojiSelector","chosenEmoji","setChosenEmoji","visiblePicker","setVisiblePicker","showPicker","Update","Paper","elevation","OpenedTickets","deleteButton","onSelect","set","showSkinTones","Tickets","TicketsCategories","DrawerNav","history","itemsList","match","params","window","Drawer","index","ListItemIcon","Divider","exact","path","VerifyEnabled","TicketsEnabled","ShowcaseEnabled","ActiveInactiveEnabled","ServerSelector","cover","paddingBottom","margintLeft","media","styles","useFirebaseBtnStyles","usePushingGutterStyles","CardMedia","image","CardActions","linkto","externallinkto","buttonVariant","UseStyles","SelectServer","tifOptions","te","description","processData","disableTracksWidthCompensation","landing","maxHeight","features","minHeight","featuresImage","featuresMedia","footer","footerText","justify","Zoom","in","transitionDelay","Slide","mountOnEnter","unmountOnExit","PanelImage","margintTop","alignContent","TicketsImage","App","ReactDOM","render","StrictMode","Routes","document","getElementById"],"mappings":"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","file":"static/js/main.38ce5936.chunk.js","sourcesContent":["import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Card, Typography, CardContent, CardActions} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n\r\n\r\nfunction CardHeader(props){\r\n\r\n  const useStyles = makeStyles(() =>({\r\n    root:{\r\n      textAlign: \"center\",\r\n      background: props.color\r\n    },\r\n    text:{\r\n      fontSize: 18,\r\n      color: props.font\r\n    },\r\n    title:{\r\n      fontWeight: \"bold\",\r\n      fontSize: 22,\r\n      color: props.font\r\n    }\r\n\r\n  }));\r\n\r\n  const clases=useStyles();\r\n\r\n  return(\r\n    <Card className={clases.root}>\r\n      <CardContent>\r\n        {props.icon}\r\n        <Typography className={clases.title}>\r\n          {props.title}\r\n        </Typography>\r\n        <Typography className={clases.text}>\r\n          {props.text}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default CardHeader;\r\n","import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport \"../assets/Graphics.css\";\r\n\r\nfunction Graphics(props){\r\n  const data={\r\n    labels:[\"5 days\", \"4 days\", \"3 days\", \"2 days\", \"1 day\"],\r\n    datasets:[{\r\n      label: props.name,\r\n      fill:false,\r\n      backgroundColor:\"rgba(63, 63, 90, 1)\",\r\n      borderColor:\"rgba(88, 125, 213, 1)\",\r\n      pointBorderColor:\"rgba(88, 125, 213, 1)\",\r\n      pointBorderWidth:1,\r\n      pointHoverRadius:5,\r\n      pointHoverBackgroundColor:\"rgba(88, 125, 213, 1)\",\r\n      pointHoverBorderColor:\"rgba(88, 125, 213, 1)\",\r\n      pointRadius:1,\r\n      pointHitRadius: 10,\r\n      data: props.data\r\n      }\r\n    ]\r\n  }\r\n\r\n\r\n  return(\r\n    <div className=\"containerGraphics\">\r\n      <Line data={data} />\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n}\r\n\r\nexport default Graphics;\r\n","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nconst StyledTableCell = withStyles(() =>({\r\n  head:{\r\n    color: \"white\",\r\n    background: \"rgba(66, 66, 66, 1)\",\r\n    textAlign: \"center\",\r\n  },\r\n  body:{\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nexport default function TableMaterials(props){\r\n\r\n\r\n  return(\r\n    <TableContainer>\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n            <StyledTableCell>News</StyledTableCell>\r\n            <StyledTableCell>Date</StyledTableCell>\r\n            <StyledTableCell>Changes</StyledTableCell>\r\n\r\n        </TableRow>\r\n      </TableHead>\r\n\r\n      <TableBody>\r\n        {props.data.map(element=>(\r\n          <TableRow key={element.id}>\r\n            <TableCell>{element.new}</TableCell>\r\n            <TableCell align=\"center\">{element.date}</TableCell>\r\n            <TableCell align=\"center\">{element.changes}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n\r\n\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport \"fontsource-roboto\";\r\nimport '../assets/Dashboard.css'\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\r\nimport CardHeader from '../components/CardsHeader';\r\nimport Graphics from '../components/Graphics';\r\nimport TableMaterials from '../components/TableMaterials';\r\nimport { DisappearedLoading } from 'react-loadingg';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root:{\r\n    flexGrow: 1\r\n  },\r\n  icons:{\r\n    color: \"white\"\r\n  },\r\n  containerGraphics:{\r\n    marginTop: '40px'\r\n  },\r\n  containerTable:{\r\n    marginTop: '40px'\r\n  }\r\n\r\n\r\n\r\n\r\n}));\r\n\r\nconst data = [\r\n    {\r\n      id:1,\r\n      new:\r\n        \"New tickets features check it now!\",\r\n      date: \"6 de sep. 2020\",\r\n      changes: 32,\r\n    },\r\n    {\r\n      id:2,\r\n        new:\r\n          \"New Verify feature!\",\r\n        date: \"5 de sep. 2020\",\r\n        changes: 31,\r\n      },\r\n      {\r\n      id:3,\r\n        new:\r\n          \"SpartBot is now available for everyone\",\r\n        date: \"4 de sep. 2020\",\r\n        changes: 21,\r\n      },\r\n  ];\r\n\r\nfunction Content(props){\r\n  const clases= useStyles();\r\n  const test = {\"Channels\":14,\"GuildName\":\"SpartBot Support\",\"Members\":11}\r\n  return(\r\n\r\n    <div className={clases.root}>\r\n      {props.loading && <DisappearedLoading size=\"large\" speed={.5} color=\"#587dd5\" style={{marginLeft: \"50%\", marginButtom: \"50%\", marginTop: \"20%\"}}/>}\r\n      {!props.loading &&\r\n      <Grid container spacing={3}>\r\n\r\n        <Grid item xs={12} sm={4} md={4} lg={4} lg={4}>\r\n          <CardHeader icon={<ChatIcon className={clases.root}/>} title={props.GuildName} text=\"Discord Server\" color=\"#3D3A3A\" font=\"white\"/>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4} md={4} lg={4} lg={4}>\r\n          <CardHeader icon={<PeopleAltIcon className={clases.root}/>} title={props.GuildMembers} text=\"Users\" color=\"#3D3A3A\" font=\"white\"/>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4} md={4} lg={4} lg={4}>\r\n          <CardHeader icon={<QuestionAnswerIcon className={clases.root}/>} title={props.GuildChannels} text=\"Channels\" color=\"#3D3A3A\" font=\"white\"/>\r\n        </Grid>\r\n\r\n\r\n\r\n        <Grid item xs={12} sm={12} md={12} lg={12} lg={12} className={clases.containerTable}>\r\n          < TableMaterials data={data}/>\r\n        </Grid>\r\n\r\n      </Grid>\r\n      }\r\n\r\n\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","import {React, useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useForm, ErrorMessage, Controller } from \"react-hook-form\";\r\nimport {\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  FormHelperText,\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\n\r\nexport default function FormVerification(props) {\r\n\r\n\r\n  const greenTheme = createMuiTheme({ palette: { \r\n    primary: {\r\n        main: \"#00e676\",\r\n        contrastText: \"#fff\"\r\n    } }})\r\n\r\n    const useStyles = makeStyles((theme) =>({\r\n        root:{\r\n            margin: theme.spacing(9),\r\n            textAlign: \"center\",\r\n        },\r\n        submit:{\r\n            marginTop: 30\r\n        },\r\n        selectField:{\r\n            margin: theme.spacing(1),\r\n            width: 380,\r\n            minWidth: 120,\r\n            \"& .MuiOutlinedInput-input\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiInputLabel-root\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: \"white\"\r\n            },\r\n            \"&:hover .MuiOutlinedInput-input\": {\r\n              color: \"white\"\r\n            },\r\n            \"&:hover .MuiInputLabel-root\": {\r\n              color: \"white\"\r\n            },\r\n            \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: \"white\"\r\n            },\r\n            \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiInputLabel-root.Mui-focused\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: \"white\"\r\n            },\r\n            '& label.Mui-focused': {\r\n                color: 'white',\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n            },\r\n            '& .MuiOutlinedInput-root': {\r\n                '& fieldset': {\r\n                borderColor: 'white',\r\n                },\r\n                '&:hover fieldset': {\r\n                borderColor: 'white',\r\n                },\r\n                '&.Mui-focused fieldset': {\r\n                borderColor: 'white',\r\n                },\r\n            }  \r\n        }\r\n}));\r\n    const CssTextField = withStyles({\r\n        root: {\r\n          '& label.Mui-focused': {\r\n            color: 'white',\r\n          },\r\n          '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n          },\r\n          '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n              borderColor: 'white',\r\n            },\r\n            '&:hover fieldset': {\r\n              borderColor: 'white',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n              borderColor: 'white',\r\n            },\r\n          },\r\n        },\r\n      })(TextField);\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const {  register, handleSubmit, errors, control } = useForm();\r\n    const [information, setInformation] = useState({});\r\n    const [ buttonType, setButtonType] = useState();\r\n\r\n    const onSubmitCurrent = handleSubmit(data => {\r\n        data.formType = 'formCurrent'\r\n        console.log(data)   \r\n        fetch(`/api/setverify/${props.url}`,{\r\n        method: \"POST\",\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data)\r\n    }).then(response => response.json())\r\n    .then(data => props.onChange(data.response)\r\n    )\r\n    });\r\n\r\n    const onSubmitNew = handleSubmit(data => {\r\n      data.formType = 'formNew'\r\n      console.log(data)   \r\n      fetch(`/api/setverify/${props.url}`,{\r\n      method: \"POST\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data)\r\n  }).then(response => response.json())\r\n  .then(data => props.onChange(data.response)\r\n  )\r\n  });\r\n\r\n    const menuOptionsChannels = [];\r\n    const menuOptionsRoles = [];\r\n\r\n    const test =  {\"743211086458650687\":\"general\",\"744273735149813882\":\"help\",\"744275473881890896\":\"verification\",\"744318477095010395\":\"developer_channel\",\"744319814100582590\":\"closed-questions\",\"744340921608568962\":\"rules\",\"744541100127027288\":\"report-bugs\",\"749240633205588038\":\"information\",\"779647561388130314\":\"votes\"}\r\n\r\n    const getChannels = () =>{\r\n        for(const Channel in props.Channels){\r\n            menuOptionsChannels.push(<MenuItem key={Channel} value={String(Channel)}>{String(props.Channels[String(Channel)])}</MenuItem>);\r\n        }\r\n    }\r\n    const getRoles = () =>{\r\n        for(const Role in props.Roles){\r\n            menuOptionsRoles.push(<MenuItem key={Role} value={String(Role)}>{String(props.Roles[String(Role)])}</MenuItem>);\r\n        }\r\n    }\r\n\r\n    getChannels();\r\n    getRoles();\r\n\r\n    return (\r\n        <Grid>\r\n        <div className={classes.root}>\r\n        <form>\r\n            <div>\r\n            <Grid item xs={50}>\r\n            <CssTextField\r\n                fullWidth={true}\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Multiline\"\r\n                multiline\r\n                rows={8}\r\n                defaultValue=\"Content of the verification message\"\r\n                variant=\"outlined\"\r\n                inputRef={register}\r\n                name=\"Message\"\r\n                color= \"secondary\"\r\n\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <FormControl className={classes.selectField}\r\n                style={{ minWidth: 300 }}\r\n                error={Boolean(errors.channel)}\r\n            >\r\n                <InputLabel id=\"channel\">\r\n                    Channel to send message\r\n                </InputLabel>\r\n                <Controller \r\n                as={\r\n                    <Select>\r\n                        {menuOptionsChannels}\r\n                    </Select>\r\n                }\r\n                name=\"channel\"\r\n                rules={{ required: \"This is required\" }}\r\n                control={control}\r\n                defaultValue=\"\"\r\n                color=\"secondary\"\r\n                />\r\n                <FormHelperText>\r\n                {errors.channel && errors.channel.message}\r\n                </FormHelperText>\r\n            </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <FormControl className={classes.selectField}\r\n                style={{ minWidth: 300 }}\r\n                error={Boolean(errors.role)}\r\n            >\r\n                <InputLabel id=\"roleSelect\">\r\n                    Role of verified members\r\n                </InputLabel>\r\n                <Controller \r\n                as={\r\n                    <Select>\r\n                        {menuOptionsRoles}\r\n                    </Select>\r\n                }\r\n                name=\"role\"\r\n                rules={{ required: \"This is required\" }}\r\n                control={control}\r\n                defaultValue=\"\"\r\n                variant=\"standard\"\r\n\r\n                />\r\n                <FormHelperText>\r\n                {errors.role && errors.role.message}\r\n                </FormHelperText>\r\n            </FormControl>\r\n            </Grid>\r\n            </div>\r\n        <Grid item xs={12}>\r\n        <ThemeProvider theme={greenTheme}>\r\n                <Button\r\n                startIcon={<SaveIcon />}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={onSubmitCurrent}\r\n                >\r\n\r\n                current configuration\r\n                </Button>\r\n            </ThemeProvider>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n\r\n            <ThemeProvider theme={greenTheme}>\r\n                <Button\r\n                startIcon={<SaveIcon />}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={onSubmitNew}\r\n                >\r\n                New configuration\r\n                </Button>\r\n            </ThemeProvider>\r\n        </Grid>\r\n        </form>\r\n        </div>\r\n\r\n        </Grid>\r\n        \r\n    );\r\n}","import {React, useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useForm, ErrorMessage, Controller } from \"react-hook-form\";\r\nimport {\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  FormHelperText,\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\n\r\nexport default function FormShowcase(props) {\r\n\r\n\r\n  const greenTheme = createMuiTheme({ palette: { \r\n    primary: {\r\n        main: \"#00e676\",\r\n        contrastText: \"#fff\"\r\n    } }})\r\n\r\n    const useStyles = makeStyles((theme) =>({\r\n        root:{\r\n            margin: theme.spacing(9),\r\n            textAlign: \"center\",\r\n        },\r\n        submit:{\r\n            marginTop: 30\r\n        },\r\n        selectField:{\r\n            margin: theme.spacing(1),\r\n            width: 380,\r\n            minWidth: 120,\r\n            \"& .MuiOutlinedInput-input\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiInputLabel-root\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: \"white\"\r\n            },\r\n            \"&:hover .MuiOutlinedInput-input\": {\r\n              color: \"white\"\r\n            },\r\n            \"&:hover .MuiInputLabel-root\": {\r\n              color: \"white\"\r\n            },\r\n            \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: \"white\"\r\n            },\r\n            \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiInputLabel-root.Mui-focused\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: \"white\"\r\n            },\r\n            '& label.Mui-focused': {\r\n                color: 'white',\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n            },\r\n            '& .MuiOutlinedInput-root': {\r\n                '& fieldset': {\r\n                borderColor: 'white',\r\n                },\r\n                '&:hover fieldset': {\r\n                borderColor: 'white',\r\n                },\r\n                '&.Mui-focused fieldset': {\r\n                borderColor: 'white',\r\n                },\r\n            }  \r\n        }\r\n}));\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const {  register, handleSubmit, errors, control } = useForm();\r\n\r\n\r\n    const onSubmitNew = handleSubmit(data => {\r\n      data.formType = 'formNew'\r\n      console.log(data)   \r\n      fetch(`/api/setshowcase/${props.url}`,{\r\n      method: \"POST\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data)\r\n  }).then(response => response.json())\r\n  .then(data => props.onChange(data.response)\r\n  )\r\n  });\r\n\r\n    const menuOptionsChannels = [];\r\n \r\n\r\n\r\n    const getChannels = () =>{\r\n        for(const Channel in props.Channels){\r\n            menuOptionsChannels.push(<MenuItem key={Channel} value={String(Channel)}>{String(props.Channels[String(Channel)])}</MenuItem>);\r\n        }\r\n    }\r\n\r\n\r\n    getChannels();\r\n\r\n    return (\r\n        <Grid>\r\n        <div className={classes.root}>\r\n        <form>\r\n        <div>\r\n            \r\n        <Grid item xs={12}>\r\n            <FormControl className={classes.selectField}\r\n                style={{ minWidth: 300 }}\r\n                error={Boolean(errors.channel)}\r\n                >\r\n                <InputLabel id=\"channel\">\r\n                    Channel of showcase\r\n                </InputLabel>\r\n                <Controller \r\n                    as={\r\n                        <Select>\r\n                            {menuOptionsChannels}\r\n                        </Select>\r\n                    }\r\n                    name=\"channel\"\r\n                    rules={{ required: \"This is required\" }}\r\n                    control={control}\r\n                    defaultValue=\"\"\r\n                    color=\"secondary\"\r\n                    />\r\n                <FormHelperText>\r\n                    {errors.channel && errors.channel.message}\r\n                </FormHelperText>\r\n            </FormControl>\r\n        </Grid>\r\n        </div>\r\n        <Grid item xs={12}>\r\n            <ThemeProvider theme={greenTheme}>\r\n                <Button\r\n                    startIcon={<SaveIcon />}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={onSubmitNew}\r\n                    >\r\n                    Save\r\n                </Button>\r\n            </ThemeProvider>\r\n        </Grid>\r\n        </form>\r\n        </div>\r\n\r\n        </Grid>\r\n        \r\n    );\r\n}","import {React, useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useForm, ErrorMessage, Controller } from \"react-hook-form\";\r\nimport {\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  FormHelperText,\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\n\r\nexport default function FormActiveInactive(props) {\r\n\r\n\r\n  const greenTheme = createMuiTheme({ palette: { \r\n    primary: {\r\n        main: \"#00e676\",\r\n        contrastText: \"#fff\"\r\n    } }})\r\n\r\n    const useStyles = makeStyles((theme) =>({\r\n        root:{\r\n            margin: theme.spacing(9),\r\n            textAlign: \"center\",\r\n        },\r\n        submit:{\r\n            marginTop: 30\r\n        },\r\n        selectField:{\r\n            margin: theme.spacing(1),\r\n            width: 380,\r\n            minWidth: 120,\r\n            \"& .MuiOutlinedInput-input\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiInputLabel-root\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: \"white\"\r\n            },\r\n            \"&:hover .MuiOutlinedInput-input\": {\r\n              color: \"white\"\r\n            },\r\n            \"&:hover .MuiInputLabel-root\": {\r\n              color: \"white\"\r\n            },\r\n            \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: \"white\"\r\n            },\r\n            \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiInputLabel-root.Mui-focused\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: \"white\"\r\n            },\r\n            '& label.Mui-focused': {\r\n                color: 'white',\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n            },\r\n            '& .MuiOutlinedInput-root': {\r\n                '& fieldset': {\r\n                borderColor: 'white',\r\n                },\r\n                '&:hover fieldset': {\r\n                borderColor: 'white',\r\n                },\r\n                '&.Mui-focused fieldset': {\r\n                borderColor: 'white',\r\n                },\r\n            }  \r\n        }\r\n}));\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const {  register, handleSubmit, errors, control } = useForm();\r\n\r\n\r\n    const onSubmitNew = handleSubmit(data => {\r\n      data.formType = 'formNew'\r\n      console.log(data)   \r\n      fetch(`/api/setactiveinactive/${props.url}`,{\r\n      method: \"POST\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data)\r\n  }).then(response => response.json())\r\n  .then(data => props.onChange(data.response)\r\n  )\r\n  });\r\n\r\n    const menuOptionsCategories = [];\r\n \r\n\r\n\r\n    const getCategories = () =>{\r\n        for(const Categories in props.Categories){\r\n            menuOptionsCategories.push(<MenuItem key={Categories} value={String(Categories)}>{String(props.Categories[String(Categories)])}</MenuItem>);\r\n        }\r\n    }\r\n\r\n\r\n    getCategories();\r\n\r\n    return (\r\n        <Grid>\r\n        <div className={classes.root}>\r\n        <form>\r\n        <div>\r\n            \r\n        <Grid item xs={12}>\r\n            <FormControl className={classes.selectField}\r\n                style={{ minWidth: 300 }}\r\n                error={Boolean(errors.channel)}\r\n                >\r\n                <InputLabel id=\"activeCategory\">\r\n                    Active Category\r\n                </InputLabel>\r\n                <Controller \r\n                    as={\r\n                        <Select>\r\n                            {menuOptionsCategories}\r\n                        </Select>\r\n                    }\r\n                    name=\"activeCategory\"\r\n                    rules={{ required: \"This is required\" }}\r\n                    control={control}\r\n                    defaultValue=\"\"\r\n                    color=\"secondary\"\r\n                    />\r\n                <FormHelperText>\r\n                    {errors.activeCategory && errors.activeCategory.message}\r\n                </FormHelperText>\r\n            </FormControl>\r\n            <FormControl className={classes.selectField}\r\n                style={{ minWidth: 300 }}\r\n                error={Boolean(errors.channel)}\r\n                >\r\n                <InputLabel id=\"inactiveCategory\">\r\n                    Inactive Category\r\n                </InputLabel>\r\n                <Controller \r\n                    as={\r\n                        <Select>\r\n                            {menuOptionsCategories}\r\n                        </Select>\r\n                    }\r\n                    name=\"inactiveCategory\"\r\n                    rules={{ required: \"This is required\" }}\r\n                    control={control}\r\n                    defaultValue=\"\"\r\n                    color=\"secondary\"\r\n                    />\r\n                <FormHelperText>\r\n                    {errors.inactiveCategory && errors.inactiveCategory.message}\r\n                </FormHelperText>\r\n            </FormControl>\r\n        </Grid>\r\n        </div>\r\n        <Grid item xs={12}>\r\n            <ThemeProvider theme={greenTheme}>\r\n                <Button\r\n                    startIcon={<SaveIcon />}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={onSubmitNew}\r\n                    >\r\n                    Save\r\n                </Button>\r\n            </ThemeProvider>\r\n        </Grid>\r\n        </form>\r\n        </div>\r\n\r\n        </Grid>\r\n        \r\n    );\r\n}","import {React, useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useForm, ErrorMessage, Controller } from \"react-hook-form\";\r\nimport {\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  FormHelperText,\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\n\r\nexport default function FormTickets(props) {\r\n\r\n\r\n  const greenTheme = createMuiTheme({ palette: { \r\n    primary: {\r\n        main: \"#00e676\",\r\n        contrastText: \"#fff\"\r\n    } }})\r\n\r\n    const useStyles = makeStyles((theme) =>({\r\n        root:{\r\n            margin: theme.spacing(9),\r\n            textAlign: \"center\",\r\n        },\r\n        submit:{\r\n            marginTop: 30\r\n        },\r\n        selectField:{\r\n            margin: theme.spacing(1),\r\n            width: 380,\r\n            minWidth: 120,\r\n            \"& .MuiOutlinedInput-input\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiInputLabel-root\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: \"white\"\r\n            },\r\n            \"&:hover .MuiOutlinedInput-input\": {\r\n              color: \"white\"\r\n            },\r\n            \"&:hover .MuiInputLabel-root\": {\r\n              color: \"white\"\r\n            },\r\n            \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: \"white\"\r\n            },\r\n            \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiInputLabel-root.Mui-focused\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: \"white\"\r\n            },\r\n            '& label.Mui-focused': {\r\n                color: 'white',\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n            },\r\n            '& .MuiOutlinedInput-root': {\r\n                '& fieldset': {\r\n                borderColor: 'white',\r\n                },\r\n                '&:hover fieldset': {\r\n                borderColor: 'white',\r\n                },\r\n                '&.Mui-focused fieldset': {\r\n                borderColor: 'white',\r\n                },\r\n            }  \r\n        }\r\n}));\r\n    const CssTextField = withStyles({\r\n        root: {\r\n          '& label.Mui-focused': {\r\n            color: 'white',\r\n          },\r\n          '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n          },\r\n          '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n              borderColor: 'white',\r\n            },\r\n            '&:hover fieldset': {\r\n              borderColor: 'white',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n              borderColor: 'white',\r\n            },\r\n          },\r\n        },\r\n      })(TextField);\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const {  register, handleSubmit, errors, control } = useForm();\r\n    const [information, setInformation] = useState({});\r\n    const [ buttonType, setButtonType] = useState();\r\n\r\n    const onSubmitCurrent = handleSubmit(data => {\r\n        data.formType = 'formCurrent'\r\n        console.log(data)   \r\n        fetch(`/api/settickets/${props.url}`,{\r\n        method: \"POST\",\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data)\r\n    }).then(response => response.json())\r\n    .then(data => props.onChange(data.response)\r\n    )\r\n    });\r\n\r\n    const onSubmitNew = handleSubmit(data => {\r\n      data.formType = 'formNew'\r\n      console.log(data)   \r\n      fetch(`/api/settickets/${props.url}`,{\r\n      method: \"POST\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data)\r\n  }).then(response => response.json())\r\n  .then(data => props.onChange(data.response)\r\n  )\r\n  });\r\n\r\n    const menuOptionsChannels = [];\r\n\r\n\r\n    const getChannels = () =>{\r\n        for(const Channel in props.Channels){\r\n            menuOptionsChannels.push(<MenuItem key={Channel} value={String(Channel)}>{String(props.Channels[String(Channel)])}</MenuItem>);\r\n        }\r\n    }\r\n\r\n    getChannels();\r\n\r\n    return (\r\n        <Grid>\r\n        <div className={classes.root}>\r\n        <form>\r\n            <div>\r\n            <Grid item xs={50}>\r\n            <CssTextField\r\n                fullWidth={true}\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Multiline\"\r\n                multiline\r\n                rows={8}\r\n                defaultValue=\"Content of the panel to open tickets\"\r\n                variant=\"outlined\"\r\n                inputRef={register}\r\n                name=\"text\"\r\n                color= \"secondary\"\r\n\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <FormControl className={classes.selectField}\r\n                style={{ minWidth: 300 }}\r\n                error={Boolean(errors.channel)}\r\n            >\r\n                <InputLabel id=\"channel\">\r\n                    Channel to send message\r\n                </InputLabel>\r\n                <Controller \r\n                as={\r\n                    <Select>\r\n                        {menuOptionsChannels}\r\n                    </Select>\r\n                }\r\n                name=\"channel\"\r\n                rules={{ required: \"This is required\" }}\r\n                control={control}\r\n                defaultValue=\"\"\r\n                color=\"secondary\"\r\n                />\r\n                <FormHelperText>\r\n                {errors.channel && errors.channel.message}\r\n                </FormHelperText>\r\n            </FormControl>\r\n            </Grid>\r\n            </div>\r\n        <Grid item xs={12}>\r\n        <ThemeProvider theme={greenTheme}>\r\n                <Button\r\n                startIcon={<SaveIcon />}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={onSubmitCurrent}\r\n                >\r\n\r\n                current configuration\r\n                </Button>\r\n            </ThemeProvider>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n\r\n            <ThemeProvider theme={greenTheme}>\r\n                <Button\r\n                startIcon={<SaveIcon />}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={onSubmitNew}\r\n                >\r\n                New configuration\r\n                </Button>\r\n            </ThemeProvider>\r\n        </Grid>\r\n        </form>\r\n        </div>\r\n\r\n        </Grid>\r\n        \r\n    );\r\n}","import {React, useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useForm, ErrorMessage, Controller } from \"react-hook-form\";\r\nimport {\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  FormHelperText,\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport { DisappearedLoading } from 'react-loadingg';\r\n\r\nexport default function FormTranscript(props) {\r\n\r\n\r\n  const greenTheme = createMuiTheme({ palette: { \r\n    primary: {\r\n        main: \"#00e676\",\r\n        contrastText: \"#fff\"\r\n    } }})\r\n\r\n    const useStyles = makeStyles((theme) =>({\r\n        root:{\r\n            margin: theme.spacing(9),\r\n            textAlign: \"center\",\r\n        },\r\n        submit:{\r\n            marginTop: 30\r\n        },\r\n        selectField:{\r\n            margin: theme.spacing(1),\r\n            width: 380,\r\n            minWidth: 120,\r\n            \"& .MuiOutlinedInput-input\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiInputLabel-root\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: \"white\"\r\n            },\r\n            \"&:hover .MuiOutlinedInput-input\": {\r\n              color: \"white\"\r\n            },\r\n            \"&:hover .MuiInputLabel-root\": {\r\n              color: \"white\"\r\n            },\r\n            \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: \"white\"\r\n            },\r\n            \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiInputLabel-root.Mui-focused\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: \"white\"\r\n            },\r\n            '& label.Mui-focused': {\r\n                color: 'white',\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n            },\r\n            '& .MuiOutlinedInput-root': {\r\n                '& fieldset': {\r\n                borderColor: 'white',\r\n                },\r\n                '&:hover fieldset': {\r\n                borderColor: 'white',\r\n                },\r\n                '&.Mui-focused fieldset': {\r\n                borderColor: 'white',\r\n                },\r\n            }  \r\n        }\r\n}));\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const {  register, handleSubmit, errors, control } = useForm();\r\n\r\n\r\n    const onSubmitNew = handleSubmit(data => {\r\n      data.formType = 'formNew'\r\n      console.log(data)   \r\n      fetch(`/api/settranscript/${props.url}`,{\r\n      method: \"POST\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data)\r\n  }).then(response => response.json())\r\n  .then(data => props.onChange(data.response)\r\n  )\r\n  });\r\n\r\n    const menuOptionsChannels = [];\r\n \r\n\r\n\r\n    const getChannels = () =>{\r\n        for(const Channel in props.Channels){\r\n            menuOptionsChannels.push(<MenuItem key={Channel} value={String(Channel)}>{String(props.Channels[String(Channel)])}</MenuItem>);\r\n        }\r\n    }\r\n\r\n\r\n    getChannels();\r\n\r\n    return (\r\n        <Grid>\r\n        <div className={classes.root}>\r\n        <form>\r\n        <div>\r\n            \r\n        <Grid item xs={12}>\r\n            <FormControl className={classes.selectField}\r\n                style={{ minWidth: 300 }}\r\n                error={Boolean(errors.channel)}\r\n                >\r\n                <InputLabel id=\"channel\">\r\n                    Channel to send transcriptions\r\n                </InputLabel>\r\n                <Controller \r\n                    as={\r\n                        <Select>\r\n                            {menuOptionsChannels}\r\n                        </Select>\r\n                    }\r\n                    name=\"channel\"\r\n                    rules={{ required: \"This is required\" }}\r\n                    control={control}\r\n                    defaultValue=\"\"\r\n                    color=\"secondary\"\r\n                    />\r\n                <FormHelperText>\r\n                    {errors.channel && errors.channel.message}\r\n                </FormHelperText>\r\n            </FormControl>\r\n        </Grid>\r\n        </div>\r\n        <Grid item xs={12}>\r\n            <ThemeProvider theme={greenTheme}>\r\n                <Button\r\n                    startIcon={<SaveIcon />}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={onSubmitNew}\r\n                    >\r\n                    Save\r\n                </Button>\r\n            </ThemeProvider>\r\n        </Grid>\r\n        </form>\r\n        </div>\r\n\r\n        </Grid>\r\n        \r\n    );\r\n}","import { React, useCallback, useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Card, Typography, CardContent, CardActions, CardActionArea, LinearProgress, FormControl, InputLabel, Input, FormHelperText } from '@material-ui/core';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { useIosSwitchStyles } from '@mui-treasury/styles/switch/ios';\r\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FormVerification from './Forms/FormVerification';\r\nimport FormShowcase from './Forms/FormShowcase';\r\nimport FormActiveInactive from './Forms/FormActiveInactive';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { css } from \"glamor\";\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport './css/Toas.css';\r\nimport FormTickets from './Forms/FormTickets';\r\nimport FormTranscript from './Forms/FormTranscript';\r\n\r\ntoast.configure()\r\nfunction CardPlugin(props){\r\n  const [toggled, setToggled] = useState(!props.checked);\r\n  const switchStyles = useIosSwitchStyles ();\r\n\r\n\r\n  const useStyles = makeStyles((theme) =>({\r\n    root:{\r\n      textAlign: \"center\",\r\n      background: props.color\r\n    },\r\n    text:{\r\n      fontSize: 18,\r\n      color: props.font\r\n    },\r\n    title:{\r\n      fontWeight: \"bold\",\r\n      fontSize: 22,\r\n      color: props.font\r\n    },\r\n    switcher:{\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      width: 380,\r\n      minWidth: 120,\r\n    \r\n      \r\n    },\r\n\r\n\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    notchedOutline: {\r\n      borderWidth: \"1px\",\r\n      borderColor: \"yellow !important\"\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    icon:{\r\n      margin: 7,\r\n      marginTop: 15\r\n    }\r\n\r\n  }));\r\n\r\n/* DIALOG STYLES START*/\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const clases = useStyles();\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  \r\n  const handleClose = () =>{\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n  /* DIALOG STYLES FINAL*/\r\n\r\n  const ButtonStyle = (() => ({\r\n    root:{\r\n      backgroundColor: \"green\"\r\n    }\r\n\r\n\r\n  }));\r\n\r\n\r\n  const handleNotification = (value) =>{\r\n\r\n    handleClose();\r\n    if(value == \"error\"){\r\n      toast.error(\"🌋 Error!\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n    }\r\n    else{\r\n      toast.success(\"🌀 Saved!\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n    }\r\n  }\r\n\r\n  const btstyle = ButtonStyle(); \r\n  const onSubmit = data => {   \r\n    setToggled(data)\r\n    localStorage.setItem(props.formSelect, JSON.stringify(data))\r\n    fetch(`/api/${props.formSelect}/${props.url}`,{\r\n    method: \"POST\",\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(!data)\r\n  }).then(response => response.json())\r\n  .then(data => handleNotification(data.response)\r\n  )\r\n  };\r\n\r\n  const selectForm = () => {\r\n    if(props.formSelect == \"setverify\"){\r\n      return <FormVerification Roles={props.Roles} Channels={props.Channels} onChange={(value) => handleNotification(value)} url={props.url}/>\r\n    }\r\n    if(props.formSelect == \"setshowcase\"){\r\n      return <FormShowcase Channels={props.Channels} onChange={(value) => handleNotification(value)} url={props.url}/>\r\n    }\r\n    if(props.formSelect == \"setactiveinactive\"){\r\n      return <FormActiveInactive Categories={props.Categories} onChange={(value) => handleNotification(value)} url={props.url}/>\r\n    }\r\n    if(props.formSelect == \"settickets\"){\r\n      return <FormTickets Channels={props.Channels} onChange={(value) => handleNotification(value)} url={props.url}/>\r\n    }\r\n    if(props.formSelect == \"settranscript\"){\r\n      return <FormTranscript Channels={props.Channels} onChange={(value) => handleNotification(value)} url={props.url}/>\r\n    }\r\n  }\r\n\r\n  const selectedForm = selectForm()\r\n  return(\r\n    \r\n\r\n    <Card className={clases.root}>\r\n\r\n      <CardContent>\r\n        {props.icon}\r\n        <Typography className={clases.title}>\r\n          {props.title}\r\n        </Typography>\r\n        <Typography className={clases.text}>\r\n          {props.text}\r\n        </Typography>\r\n\r\n        <IconButton aria-label=\"play/pause\" onClick={handleOpen}>\r\n          <SettingsRoundedIcon/>\r\n        </IconButton>\r\n        <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        <Grid container direction=\"row\" alignItems=\"center\">\r\n          <Grid item>\r\n            <SettingsRoundedIcon className={clases.icon}/>\r\n          </Grid>\r\n          <Grid item>\r\n            {props.title}\r\n          </Grid>\r\n        </Grid>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          {selectedForm}\r\n        </DialogContent>\r\n      </Dialog>\r\n          \r\n        <Switch\r\n        classes={switchStyles}\r\n        checked={!toggled}\r\n        onChange={data => onSubmit(!data.target.checked)}\r\n        />\r\n        \r\n\r\n      </CardContent>\r\n\r\n    </Card>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default CardPlugin;\r\n","import {React, useEffect, useState} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport \"fontsource-roboto\";\r\nimport '../assets/Dashboard.css'\r\nimport CardPlugin from '../components/CardsPlugins';\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\r\nimport ExposureIcon from '@material-ui/icons/Exposure';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport { DisappearedLoading } from 'react-loadingg';\r\n\r\n\r\n\r\n\r\n\r\nexport default function Plugins(props){\r\n\r\n\r\n  const useStyles = makeStyles(() => ({\r\n    root:{\r\n      flexGrow: 1\r\n    },\r\n    icons:{\r\n      color: \"white\"\r\n    },\r\n    containerGraphics:{\r\n      marginTop: '40px'\r\n    },\r\n    containerTable:{\r\n      marginTop: '40px'\r\n    },\r\n    loading:{\r\n      marginLeft: '200px'\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  }));\r\n\r\n  const[data, setData] = useState([])\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n\r\n    const getData = async () =>{\r\n      setLoading(true);\r\n      const response = await fetch(`/api/dashboard/${props.url}/plugins`)\r\n      const response_json = await response.json()\r\n      setData(response_json)\r\n      console.log(response_json)\r\n      setLoading(false);\r\n\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  const clases= useStyles();\r\n\r\n\r\n\r\n\r\n\r\n  return(\r\n    <div className={clases.root}>\r\n      {loading && <DisappearedLoading size=\"large\" speed={.5} color=\"#587dd5\" style={{marginLeft: \"50%\", marginButtom: \"50%\", marginTop: \"20%\"}}/>}\r\n      {!loading &&\r\n      <Grid container spacing={3}>\r\n\r\n        <Grid item xs={12} sm={4} md={4} lg={4} lg={4}>\r\n          <CardPlugin icon={<VerifiedUserIcon className={clases.root}/>} title=\"Verification\" Roles={props.Roles} formSelect={\"setverify\"} Channels={props.Channels} url={props.url} checked={parseInt(data[\"VerifyEnabled\"])} title=\"Verfication\" text=\"Keep your server secure!\" color=\"#3D3A3A\" font=\"white\"/>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4} md={4} lg={4} lg={4}>\r\n          <CardPlugin icon={<ImageSearchIcon className={clases.root}/>} title=\"Showcase\" url={props.url} formSelect={\"setshowcase\"} Channels={props.Channels} url={props.url} checked={parseInt(data[\"ShowcaseEnabled\"])} title=\"Showcase\" text=\"Make a only images channel!\" color=\"#3D3A3A\" font=\"white\"/>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4} md={4} lg={4} lg={4}>\r\n          <CardPlugin icon={<ExposureIcon className={clases.root}/>} title=\"[BETA] Active/Inactive\" url={props.url} formSelect={\"setactiveinactive\"} Categories={props.Categories} checked={parseInt(data[\"ActiveInactiveEnabled\"])} title=\"Active/Inactive\" text=\"Show to your members what channels are currently active\" color=\"#3D3A3A\" font=\"white\"/>\r\n        </Grid>\r\n\r\n\r\n\r\n\r\n\r\n      </Grid>\r\n\r\n\r\n\r\n      }\r\n    </div>\r\n  );\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/SpartBot_christmas.005b543f.png\";","import { React, useCallback, useEffect, useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useOnlineAvatarStyles } from '@mui-treasury/styles/avatar/online';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { Link } from 'react-router-dom';\r\nimport './css/fonts.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Container } from \"@material-ui/core\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SpartBot from '../components/images/SpartBot_christmas.png';\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      flexGrow: 1,\r\n\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n      type: 'dark',\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n      overflow: 'auto',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(7),\r\n    },\r\n      menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    leftMenu:{\r\n      marginRight: theme.spacing(5),\r\n      \r\n\r\n\r\n    },\r\n    title: {\r\n      fontFamily: \"Roboto\",\r\n      fontSize: 27,\r\n      fontWeight: 750,\r\n      textDecoration: \"none\",\r\n      color: \"white\"\r\n\r\n    },\r\n    menu: {\r\n\r\n\r\n      margin: \"10px\",\r\n      paddingLeft: \"16px\",\r\n      right: 0,\r\n      position: \"relative\",\r\n      width: \"100%\",\r\n      background: \"transparent\",\r\n      flexGrow: 1,  \r\n      display: 'flex',\r\n      flexDirection: 'row' \r\n\r\n\r\n    },\r\n    menuNav:{\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        display: \"none\"\r\n      },\r\n      marginTop: \".2%\",\r\n      marginLeft: \"2%\",\r\n      textDecoration: 'none',\r\n      color: \"white\"\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    sizeSelect:{\r\n      minWidth: 120,\r\n      marginRight: 16,\r\n      marginTop: 7,\r\n    },\r\n    selectField:{\r\n      flexGrow: 1,\r\n\r\n      margin: theme.spacing(1),\r\n      width: 200,\r\n\r\n\r\n      \"& .MuiOutlinedInput-input\": {\r\n        color: \"white\"\r\n      },\r\n      \"& .MuiInputLabel-root\": {\r\n        color: \"white\"\r\n      },\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        borderColor: \"white\"\r\n      },\r\n      \"&:hover .MuiOutlinedInput-input\": {\r\n        color: \"white\"\r\n      },\r\n      \"&:hover .MuiInputLabel-root\": {\r\n        color: \"white\"\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        borderColor: \"white\"\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input\": {\r\n        color: \"white\"\r\n      },\r\n      \"& .MuiInputLabel-root.Mui-focused\": {\r\n        color: \"white\"\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        borderColor: \"\"\r\n      },\r\n      '& label.Mui-focused': {\r\n          color: 'white',\r\n      },\r\n      '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#587dd5',\r\n      },\r\n      '& .MuiOutlinedInput-root': {\r\n          '& fieldset': {\r\n          borderColor: '#587dd5',\r\n          },\r\n          '&:hover fieldset': {\r\n          borderColor: '#587dd5',\r\n          },\r\n          '&.Mui-focused fieldset': {\r\n          borderColor: '#587dd5',\r\n          },\r\n      },\r\n      navDisplayFlex: {\r\n        display: `flex`,\r\n        display: \"inline-block\",\r\n        padding: 0,\r\n      },\r\n      linkText: {\r\n        textDecoration: `none`,\r\n        textTransform: `uppercase`,\r\n        color: `white`\r\n      },\r\n      rightToolbar: {\r\n        marginLeft: 16,\r\n      },\r\n  }\r\n  }));\r\n\r\n  const darkTheme = createMuiTheme({\r\n    palette: {\r\n      type: 'dark',\r\n      primary: {\r\n        main: \"#5393ff\",\r\n        contrastText: \"#fff\"\r\n      }\r\n    },\r\n    });\r\n\r\n\r\nexport default function NavBar(props){\r\n\r\n    const[user, SetUser] = useState([])\r\n    const[avatar, SetAvatar] = useState([])\r\n    const[servers, setServers] = useState([])\r\n    const [auth, setAuth] = useState(true);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    \r\n    const handleChange = (event) => {\r\n        setAuth(event.target.checked);\r\n      };\r\n    \r\n      const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setAnchorEl(null);\r\n      };\r\n      const styles2 = useOnlineAvatarStyles({\r\n        color: 'white',\r\n        size: 43.2,\r\n        thickness: 1,\r\n        gap: 1,\r\n      });\r\n\r\n\r\n    useEffect(() => {\r\n      const getData = async () =>{\r\n        const response = await fetch(\"/api/user/me\")\r\n        const response_json = await response.json()\r\n        if(response_json.type == \"logged\"){\r\n          SetUser(response_json.name);\r\n          SetAvatar(response_json.avatar_url);\r\n          setServers(response_json.guilds);\r\n          setAuth(true)\r\n        }\r\n        else{\r\n          setAuth(false)\r\n        }\r\n        \r\n  \r\n      }\r\n      getData()\r\n    }, [])\r\n\r\n    const [dashboard, setDashboard] = useState(false)\r\n    const [serverid, setServerid] = useState()\r\n\r\n    useEffect(() => {\r\n      if(props.location.pathname.includes(\"dashboard\")){\r\n        setDashboard(true)\r\n        var server = props.location.pathname\r\n        server = server.replace(/\\D/g, \"\");\r\n        console.log(server)\r\n        setServerid(server)\r\n\r\n      }\r\n      else{\r\n        setDashboard(false)\r\n      }\r\n    }, [props.location.pathname])\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n      <ThemeProvider theme={darkTheme}>\r\n      <CssBaseline/>\r\n        <AppBar position=\"fixed\" className={classes.appBar} color=\"#00000\">\r\n        <Toolbar>\r\n            <Link to=\"/\" style={{textDecoration: 'none'}}>\r\n            <img src={SpartBot} style={{width: 50, height: 50, borderRadius: \"50%\", marginRight: -15, marginTop: \"1%\"}} edge=\"start\" />\r\n            </Link>\r\n          <div className={classes.menu}>\r\n          <Link to=\"/\" style={{textDecoration: 'none', color: \"white\"}}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              SpartBot\r\n            </Typography>\r\n          </Link>\r\n            <Link to=\"/servers\" className={classes.menuNav}>\r\n            <Button color=\"inherit\" href=\"/servers\">Servers</Button>\r\n            </Link>\r\n            <Button component=\"a\" href=\"https://discord.com/oauth2/authorize?client_id=737002593510883358&scope=bot&permissions=268958800\" color=\"inherit\" className={classes.menuNav} >Invite</Button>\r\n            <Button component=\"a\" href=\"https://mefaltaunverano.gitbook.io/spartbot/\" color=\"inherit\" className={classes.menuNav} >Docs</Button>\r\n            <Button component=\"a\" href=\"https://discord.com/invite/NVVdaPX\" color=\"inherit\" className={classes.menuNav} >Support</Button>\r\n            </div>\r\n          {!auth &&\r\n          <ThemeProvider theme={darkTheme}>\r\n          <Button href=\"/api/login/\" color=\"inherit\" variant=\"contained\" size=\"medium\" color=\"primary\">Login</Button>\r\n          </ThemeProvider>\r\n          }\r\n          {auth && ( \r\n            <div style={{      flexGrow: 1,  \r\n              display: 'flex',\r\n              flexDirection: 'row' }}>\r\n              {dashboard &&\r\n              \r\n                <FormControl  className={classes.selectField}>\r\n                <Select\r\n                  className={classes.sizeSelect}\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={serverid}\r\n                >\r\n                  {servers.map((server)=>\r\n                  <MenuItem component=\"a\" href={\"/dashboard/\"+server.id} value={server.id}>{server.Name}</MenuItem>\r\n                 )}\r\n                </Select>\r\n                </FormControl>\r\n              }       \r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <div className={styles2.root}>\r\n                <Avatar altr=\"src\" src={avatar} />\r\n                </div>\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <Link to=\"/servers\" style={{textDecoration: \"none\", color:\"white\"}}>\r\n                <MenuItem onClick={handleClose}>Servers</MenuItem>\r\n                </Link>\r\n                \r\n                <MenuItem component=\"a\" href=\"/api/logout/\" onClick={handleClose}>Logout</MenuItem>\r\n              </Menu>\r\n            </div>\r\n\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      </ThemeProvider>\r\n              \r\n    );\r\n}\r\n","import {React, useState, cloneElement} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport \"fontsource-roboto\";\r\nimport '../assets/Dashboard.css'\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport CardPlugin from '../components/CardsPlugins';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Graphics from '../components/Graphics';\r\nimport TableMaterials from '../components/TableMaterials';\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\r\nimport ExposureIcon from '@material-ui/icons/Exposure';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport {Card, Typography, CardContent, CardActions, CardActionArea, LinearProgress, FormControl, InputLabel, Input, FormHelperText } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useForm, ErrorMessage, Controller } from \"react-hook-form\";\r\nimport {\r\n    Button,\r\n    TextField\r\n  } from \"@material-ui/core\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport DeleteRoundedIcon from '@material-ui/icons/DeleteRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport { toast } from 'react-toastify';\r\nimport { css } from \"glamor\";\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport './css/Toas.css';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root:{\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    marginTop: 7,\r\n    height: \"50px\",\r\n  },\r\n  icons:{\r\n    color: \"white\"\r\n  },\r\n  containerGraphics:{\r\n    marginTop: '40px'\r\n  },\r\n  containerTable:{\r\n    marginTop: '40px'\r\n  },\r\n  section:{\r\n    height: \"100%\",\r\n  },\r\n  categories:{\r\n    marginTop: 7,\r\n  },\r\n  button:{\r\n    flexGrow: 1,\r\n\r\n\r\n\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n\r\n\r\n\r\n\r\n}));\r\n\r\nfunction generate(element) {\r\n  return [0, 1, 2].map((value) =>\r\n    cloneElement(element, {\r\n      key: value,\r\n    }),\r\n  );\r\n}\r\nexport default function Category(props){\r\n    const {  register, handleSubmit, errors, control } = useForm();\r\n    const [dense, setDense] = useState(false);\r\n    const [secondary, setSecondary] = useState(false);\r\n\r\n\r\n  const classes= useStyles();\r\n\r\n  const redTheme = createMuiTheme({ palette: { \r\n    primary: {\r\n        main: \"#ab003c\",\r\n        contrastText: \"#fff\"\r\n    } }})\r\n\r\n    \r\n  const handleNotification = (value) =>{\r\n\r\n    if(value == \"error\"){\r\n      toast.error(\"🌋 Error!\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n    }\r\n    else{\r\n      toast.success(\"🌀 Saved!\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n    }\r\n  }\r\n  const [showResults, setShowResults] = useState(true)\r\n\r\n  const onSubmitNew = handleSubmit(data => {\r\n    data.formType = 'formNew'\r\n    data.TicketCategory = props.icon\r\n    console.log(data)   \r\n    fetch(`/api/removecategory/${props.url}`,{\r\n    method: \"POST\",\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(data)\r\n  }).then(response => response.json())\r\n  .then(data => {\r\n    handleNotification(data.response)\r\n    setShowResults(false)\r\n    props.onChange(data.response)\r\n  }\r\n\r\n  )\r\n  });\r\n\r\n\r\n  return(\r\n    <form>\r\n          {showResults && (\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar>\r\n                      <ForumIcon />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={props.name}\r\n                    secondary={secondary ? 'Secondary text' : null}\r\n\r\n                  />\r\n                  <ListItemSecondaryAction>\r\n                    <IconButton edge=\"end\" aria-label=\"delete\">\r\n                      <DeleteRoundedIcon onClick={onSubmitNew}/>\r\n                    </IconButton>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n            )}\r\n\r\n\r\n    </form>\r\n\r\n\r\n\r\n\r\n\r\n  );\r\n\r\n}","import {React, useState, cloneElement} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport \"fontsource-roboto\";\r\nimport '../assets/Dashboard.css'\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport CardPlugin from './CardsPlugins';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Graphics from './Graphics';\r\nimport TableMaterials from './TableMaterials';\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\r\nimport ExposureIcon from '@material-ui/icons/Exposure';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport {Card, Typography, CardContent, CardActions, CardActionArea, LinearProgress, FormControl, InputLabel, Input, FormHelperText } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useForm, ErrorMessage, Controller } from \"react-hook-form\";\r\nimport {\r\n    Button,\r\n    TextField\r\n  } from \"@material-ui/core\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\r\nimport ChatRoundedIcon from '@material-ui/icons/ChatRounded';\r\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\r\nimport { toast } from 'react-toastify';\r\nimport { css } from \"glamor\";\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport './css/Toas.css';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root:{\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    marginTop: 7,\r\n    height: \"50px\",\r\n  },\r\n  icons:{\r\n    color: \"white\"\r\n  },\r\n  containerGraphics:{\r\n    marginTop: '40px'\r\n  },\r\n  containerTable:{\r\n    marginTop: '40px'\r\n  },\r\n  section:{\r\n    height: \"100%\",\r\n  },\r\n  categories:{\r\n    marginTop: 7,\r\n  },\r\n  button:{\r\n    flexGrow: 1,\r\n\r\n\r\n\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n\r\n\r\n\r\n\r\n}));\r\n\r\nfunction generate(element) {\r\n  return [0, 1, 2].map((value) =>\r\n    cloneElement(element, {\r\n      key: value,\r\n    }),\r\n  );\r\n}\r\nexport default function Ticket(props){\r\n    const {  register, handleSubmit, errors, control } = useForm();\r\n    const [dense, setDense] = useState(false);\r\n    const [secondary, setSecondary] = useState(false);\r\n\r\n\r\n  const classes= useStyles();\r\n\r\n  const redTheme = createMuiTheme({ palette: { \r\n    primary: {\r\n        main: \"#ab003c\",\r\n        contrastText: \"#fff\"\r\n    } }})\r\n\r\n    const handleNotification = (value) =>{\r\n\r\n      if(value == \"error\"){\r\n        toast.error(\"🌋 Error!\", {\r\n          position: \"bottom-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n      });\r\n      }\r\n      else{\r\n        toast.success(\"🌀 Saved!\", {\r\n          position: \"bottom-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n      });\r\n      }\r\n    }\r\n    const [showResults, setShowResults] = useState(true)\r\n  \r\n    const onSubmitNew = handleSubmit(data => {\r\n      data.formType = 'formNew'\r\n      data.ticketid = props.ticketid\r\n      console.log(data)   \r\n      fetch(`/api/closeticket/${props.url}`,{\r\n      method: \"POST\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data)\r\n    }).then(response => response.json())\r\n    .then(data => {\r\n      handleNotification(data.response)\r\n      setShowResults(false)\r\n    }\r\n  \r\n    )\r\n    });\r\n\r\n\r\n  return(\r\n    <Grid>\r\n    <Grid item xs={12} sm={6} md={4} lg={12}>\r\n      {showResults && (\r\n    <List>\r\n\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar>\r\n                      <ChatRoundedIcon />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary={props.title} />\r\n                  <ListItemText>\r\n                    By {props.username}\r\n                  </ListItemText>\r\n                  <ListItemSecondaryAction>\r\n                    <IconButton edge=\"end\" aria-label=\"delete\">\r\n                      <CancelRoundedIcon onClick={onSubmitNew} />\r\n                    </IconButton>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n                </List>\r\n\r\n)}\r\n    </Grid>\r\n    </Grid>\r\n\r\n\r\n  );\r\n\r\n}","import {React, useState, useEffect} from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Card, Typography, CardContent, CardActions, CardActionArea, Dialog, DialogTitle, DialogContent, List } from '@material-ui/core';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Ticket from '../components/Ticket';\r\n\r\nfunction Content(props){\r\n\r\n  \r\n\r\n  const[data, setData] = useState([])\r\n  const[update, setUpdate] = useState([])\r\n  const x = []\r\n\r\n  useEffect(() => {\r\n\r\n    const getData = async () =>{\r\n      const response = await fetch(`/api/dashboard/${props.url}/category_tickets`)\r\n      const response_json = await response.json()\r\n      setData(response_json)\r\n      console.log(response_json)\r\n    }\r\n    getData()\r\n    \r\n  }, [update, setUpdate])\r\n\r\n\r\n  data.map((TicketCategory)=>{\r\n    if(props.icon == TicketCategory.category){\r\n      x.push(<Ticket title={TicketCategory.title} username={TicketCategory.username} ticketid={TicketCategory.ticketid} url={props.url}/>)\r\n\r\n    }\r\n  } )\r\n\r\n  return(\r\n    <div>\r\n      {x}\r\n    </div>)\r\n}\r\n\r\nexport default Content;\r\n","import {React, useState, useEffect} from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Card, Typography, CardContent, CardActions, CardActionArea, Dialog, DialogTitle, DialogContent, List } from '@material-ui/core';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Ticket from '../components/Ticket';\r\nimport Content from '../components/Content';\r\n\r\nfunction CardCategory(props){\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  \r\n  const handleClose = () =>{\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const useStyles = makeStyles((theme) =>({\r\n    root:{\r\n      textAlign: \"center\",\r\n      background: props.color\r\n    },\r\n    text:{\r\n      fontSize: 14,\r\n      color: props.font\r\n    },\r\n    title:{\r\n      fontWeight: \"bold\",\r\n      fontSize: 22,\r\n      color: props.font\r\n    }\r\n\r\n  }));\r\n\r\n  const styles = (theme) => ({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    },\r\n  });\r\n\r\n\r\n  const clases=useStyles();\r\n\r\n  const DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n        <Typography variant=\"h6\">{children}</Typography>\r\n        {onClose ? (\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </MuiDialogTitle>\r\n    );\r\n  });\r\n  \r\n  const DialogContent = withStyles((theme) => ({\r\n    root: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  }))(MuiDialogContent);\r\n\r\n\r\n\r\n\r\n  return(\r\n    <Card className={clases.root}>\r\n    <CardActionArea onClick={handleOpen}>\r\n      <CardContent>\r\n        {props.icon}\r\n        <Typography className={clases.title}>\r\n          {props.title}\r\n        </Typography>\r\n        <Typography className={clases.text}>\r\n          Click here to view tickets of {props.title}\r\n        </Typography>\r\n      </CardContent>\r\n    </CardActionArea>\r\n    <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true} maxWidth = {'md'}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        <Grid container direction=\"row\" alignItems=\"center\">\r\n          <Grid item>\r\n          </Grid>\r\n          <Grid item>\r\n            {props.title}\r\n          </Grid>\r\n        </Grid>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Content icon={props.icon} url={props.url}/>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Card>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default CardCategory;\r\n","import {React, useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useForm, ErrorMessage, Controller } from \"react-hook-form\";\r\nimport {\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  FormHelperText,\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\n\r\nexport default function FormAddCategory(props) {\r\n\r\n\r\n  const greenTheme = createMuiTheme({ palette: { \r\n    primary: {\r\n        main: \"#00e676\",\r\n        contrastText: \"white\",\r\n    } }})\r\n\r\n    const useStyles = makeStyles((theme) =>({\r\n        root:{\r\n            margin: theme.spacing(5),\r\n            textAlign: \"center\",\r\n        },\r\n        submit:{\r\n            marginTop: 50\r\n        },\r\n        selectField:{\r\n            margin: theme.spacing(1),\r\n            width: 380,\r\n            minWidth: 120,\r\n            \"& .MuiOutlinedInput-input\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiInputLabel-root\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: \"white\"\r\n            },\r\n            \"&:hover .MuiOutlinedInput-input\": {\r\n              color: \"white\"\r\n            },\r\n            \"&:hover .MuiInputLabel-root\": {\r\n              color: \"white\"\r\n            },\r\n            \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: \"white\"\r\n            },\r\n            \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiInputLabel-root.Mui-focused\": {\r\n              color: \"white\"\r\n            },\r\n            \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: \"white\"\r\n            },\r\n            '& label.Mui-focused': {\r\n                color: 'white',\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n            },\r\n            '& .MuiOutlinedInput-root': {\r\n                '& fieldset': {\r\n                borderColor: 'white',\r\n                },\r\n                '&:hover fieldset': {\r\n                borderColor: 'white',\r\n                },\r\n                '&.Mui-focused fieldset': {\r\n                borderColor: 'white',\r\n                },\r\n            }  \r\n        }\r\n}));\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'green',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'green',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'red',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'yellow',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'green',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const {  register, handleSubmit, errors, control } = useForm();\r\n\r\n\r\n    const onSubmitNew = handleSubmit(data => {\r\n      data.formType = 'formNew'\r\n      data.emoji= props.Emoji\r\n      console.log(data)   \r\n      fetch(`/api/addcategory/${props.url}`,{\r\n      method: \"POST\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data)\r\n  }).then(response => response.json())\r\n  .then(data => props.onChange(data.response)\r\n  )\r\n  });\r\n\r\n    const menuOptionsRoles = [];\r\n\r\n    const test =  {\"743211086458650687\":\"general\",\"744273735149813882\":\"help\",\"744275473881890896\":\"verification\",\"744318477095010395\":\"developer_channel\",\"744319814100582590\":\"closed-questions\",\"744340921608568962\":\"rules\",\"744541100127027288\":\"report-bugs\",\"749240633205588038\":\"information\",\"779647561388130314\":\"votes\"}\r\n\r\n\r\n    const getRoles = () =>{\r\n        for(const Role in props.Roles){\r\n            menuOptionsRoles.push(<MenuItem key={Role} value={String(Role)}>{String(props.Roles[String(Role)])}</MenuItem>);\r\n        }\r\n    }\r\n\r\n    getRoles();\r\n\r\n    return (\r\n        <Grid>\r\n        <div className={classes.root}>\r\n        <form>\r\n            <div>\r\n            <Grid item xs={50}>\r\n            <CssTextField\r\n                fullWidth={true}\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Category Name\"\r\n\r\n                rows={8}\r\n                defaultValue=\"Category Name\"\r\n                inputRef={register}\r\n                name=\"categoryName\"\r\n\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <FormControl className={classes.selectField}\r\n                style={{ minWidth: 300, width: \"100%\", marginTop: 20 }}\r\n                error={Boolean(errors.role)}\r\n            >\r\n                <InputLabel id=\"roleSelect\">\r\n                    Role that can see this category\r\n                </InputLabel>\r\n                <Controller \r\n                as={\r\n                    <Select>\r\n                        {menuOptionsRoles}\r\n                    </Select>\r\n                }\r\n                name=\"role\"\r\n                rules={{ required: \"This is required\" }}\r\n                control={control}\r\n                defaultValue=\"\"\r\n                variant=\"standard\"\r\n\r\n                />\r\n                <FormHelperText>\r\n                {errors.role && errors.role.message}\r\n                </FormHelperText>\r\n            </FormControl>\r\n            </Grid>\r\n            </div>\r\n\r\n        <Grid item xs={12}>\r\n\r\n            <ThemeProvider theme={greenTheme}>\r\n                <Button\r\n                startIcon={<SaveIcon />}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={onSubmitNew}\r\n                >\r\n                Add Category\r\n                </Button>\r\n            </ThemeProvider>\r\n        </Grid>\r\n        </form>\r\n        </div>\r\n\r\n        </Grid>\r\n        \r\n    );\r\n}","import {React, useState, useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport \"fontsource-roboto\";\r\nimport '../assets/Dashboard.css'\r\nimport Category from '../components/Category';\r\nimport CardCategory from '../components/CardCategory';\r\nimport FormAddCategory from './Forms/FormAddCategory';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport {Card, Typography, Dialog} from '@material-ui/core';\r\nimport { useForm} from \"react-hook-form\";\r\nimport {\r\n    Button,\r\n    TextField,\r\n    Paper,\r\n    List\r\n  } from \"@material-ui/core\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport './css/Toas.css';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker } from 'emoji-mart'\r\nimport DeleteRoundedIcon from '@material-ui/icons/DeleteRounded';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root:{\r\n    flexGrow: 1,\r\n  },\r\n  icons:{\r\n    color: \"white\"\r\n  },\r\n  containerGraphics:{\r\n    marginTop: '40px'\r\n  },\r\n  containerTable:{\r\n    marginTop: '40px'\r\n  },\r\n  section:{\r\n    height: \"100%\",\r\n  },\r\n  categories:{\r\n    marginTop: 5,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: 5,\r\n    shadowColor: \"black\"\r\n  },\r\n  button:{\r\n    width: \"80%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginLeft: \"10%\",\r\n    margin: 30,\r\n  },\r\n  text:{\r\n    fontSize: 30,\r\n    marginBottom: 10,\r\n    width: \"80%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexGrow: 1,\r\n    marginLeft: \"1%\",\r\n\r\n    },\r\n  emojiSelector:{\r\n    background: \"#2C2F33\",\r\n    color: \"blue\",\r\n    backgroundColor: \"#454242\"\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}));\r\n\r\nexport default function Categories(props){\r\n\r\n  const {  register, handleSubmit, errors, control } = useForm();\r\n\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    };\r\n  \r\n  const handleClose = () =>{\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n  const classes= useStyles();\r\n\r\n  const greenTheme = createMuiTheme({ palette: { \r\n    primary: {\r\n        main: \"#00e676\",\r\n        contrastText: \"#fff\"\r\n    } }})\r\n\r\n\r\n    const[data, setData] = useState([])\r\n    const[update, setUpdate] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n  \r\n      const getData = async () =>{\r\n        const response = await fetch(`/api/dashboard/${props.url}/tickets`)\r\n        const response_json = await response.json()\r\n        setData(response_json)\r\n        console.log(response_json)\r\n      }\r\n      getData()\r\n    }, [update, setUpdate])\r\n\r\n\r\n  \r\n\r\n  \r\n  const styles = (theme) => ({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    },\r\n  });\r\n\r\n  const DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n        <Typography variant=\"h6\">{children}</Typography>\r\n        {onClose ? (\r\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </MuiDialogTitle>\r\n    );\r\n  });\r\n  \r\n  const DialogContent = withStyles((theme) => ({\r\n    root: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  }))(MuiDialogContent);\r\n\r\n\r\n  const [chosenEmoji, setChosenEmoji] = useState(null);\r\n  const [visiblePicker, setVisiblePicker] = useState(false);\r\n\r\n  const onEmojiClick = (emojiObject) => {\r\n    setChosenEmoji(emojiObject[\"native\"]);\r\n    showPicker()\r\n  };\r\n\r\n  const showPicker = () => {\r\n    setVisiblePicker(!visiblePicker)\r\n  }\r\n\r\n  const removeEmoji = () => {\r\n    setChosenEmoji(false)\r\n  }\r\n  const handleNotification = (value) =>{\r\n    Update()\r\n\r\n    handleClose();\r\n    if(value == \"error\"){\r\n      toast.error(\"🌋 Error!\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n    }\r\n    else{\r\n      Update()\r\n      setChosenEmoji(false)\r\n      toast.success(\"🌀 Saved!\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n    }\r\n  }\r\n\r\n  const Update = () => {\r\n    console.log(\"ACTIVATED\")\r\n    setUpdate([\"test\"])\r\n  }\r\n  return(\r\n    <div className={classes.root}>\r\n      <Grid   container spacing={4}>\r\n\r\n      <Grid item xs={12} sm={12} md={12} lg={6}>\r\n      <Paper elevation={2}>\r\n        <List>\r\n        {data.map((TicketCategory) => <Category onChange={Update} url={props.url} name={TicketCategory[\"name\"]} icon={TicketCategory[\"emoji\"]}/>\r\n        )}\r\n        </List>\r\n            <ThemeProvider theme={greenTheme}>\r\n          <Button\r\n              startIcon={<AddCircleIcon />}\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={handleOpen}\r\n              >\r\n              Add New Category\r\n          </Button>\r\n        </ThemeProvider>     \r\n        </Paper>  \r\n        </Grid>\r\n        <Grid item xs={12} sm={10} md={9} lg={6}>\r\n        <Grid container spacing={4}>\r\n        {data.map((TicketCategory) => <Grid item xs={12} sm={10} md={9} lg={3}>\r\n              <CardCategory OpenedTickets={props.OpenedTickets} title={TicketCategory[\"name\"]} url={props.url} icon={TicketCategory[\"emoji\"]}/>\r\n          </Grid>\r\n           \r\n        )}        \r\n        </Grid>\r\n        </Grid>\r\n        <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true} maxWidth = {'md'}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        <Grid container direction=\"row\" alignItems=\"center\">\r\n          <Grid item>\r\n          </Grid>\r\n          <Grid item>\r\n            Add New Category\r\n          </Grid>\r\n        </Grid>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n\r\n        {chosenEmoji && (\r\n        <div>\r\n        <Typography className={classes.text}>\r\n        <IconButton className={classes.deleteButton}>\r\n                      <DeleteRoundedIcon onClick={removeEmoji}/>\r\n        </IconButton>\r\n             Emoji {chosenEmoji}\r\n\r\n        </Typography>\r\n        <FormAddCategory url={props.url} Roles={props.Roles} Emoji={chosenEmoji} onChange={(value) => handleNotification(value)}/>\r\n        </div>\r\n        )}\r\n        {!chosenEmoji && (\r\n        <ThemeProvider theme={greenTheme}>\r\n          <Button\r\n              startIcon={<AddCircleIcon />}\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={showPicker}\r\n              >\r\n              Add Emoji\r\n          </Button>\r\n        </ThemeProvider>\r\n        )}\r\n        <span>\r\n        {visiblePicker && (\r\n        <Picker onSelect={(emoji) => {onEmojiClick(emoji)}} theme=\"dark\" set=\"twitter\" title=\"Choose a react icon\" showSkinTones={false}/>\r\n        )}\r\n        </span>\r\n        </DialogContent>\r\n      </Dialog>\r\n      </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n","import {React, useState, useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport \"fontsource-roboto\";\r\nimport '../assets/Dashboard.css'\r\nimport CardPlugin from '../components/CardsPlugins';\r\nimport Categories from '../components/Categories';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport ReplyAllRoundedIcon from '@material-ui/icons/ReplyAllRounded';\r\nimport { DisappearedLoading } from 'react-loadingg';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root:{\r\n    flexGrow: 1\r\n  },\r\n  icons:{\r\n    color: \"white\"\r\n  },\r\n  containerGraphics:{\r\n    marginTop: '30px'\r\n  },\r\n  containerTable:{\r\n    marginTop: '30px'\r\n  },\r\n  section:{\r\n    height: \"90px\",\r\n  }\r\n\r\n\r\n\r\n\r\n}));\r\n\r\n\r\nexport default function Tickets(props){\r\n\r\n\r\n  const[data, setData] = useState([])\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getData = async () =>{\r\n      setLoading(true);\r\n      const response = await fetch(`/api/dashboard/${props.url}/plugins`)\r\n      const response_json = await response.json()\r\n      setData(response_json)\r\n      console.log(response_json)\r\n      \r\n      setLoading(false)\r\n\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n\r\n\r\n  const classes= useStyles();\r\n\r\n\r\n\r\n  return(\r\n    <div className={classes.root}>\r\n      {loading && <DisappearedLoading size=\"large\" speed={.5} color=\"#587dd5\" style={{marginLeft: \"50%\", marginButtom: \"50%\", marginTop: \"20%\"}}/>}\r\n      {!loading &&\r\n      <Grid   container\r\n\r\n        spacing={3}>\r\n        <Grid item xs={12} sm={12} md={12} lg={6}>\r\n            <CardPlugin icon={<EmailIcon className={classes.root}/>} formSelect={\"settickets\"} Channels={props.Channels} url={props.url} checked={parseInt(data[\"TicketsEnabled\"])} title=\"Tickets\" text=\"Set-up an advanced ticket system to your server!\" color=\"#3D3A3A\" font=\"white\"/>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={6}>\r\n          <CardPlugin icon={<ReplyAllRoundedIcon className={classes.root}/>} formSelect={\"settranscript\"} Channels={props.Channels} url={props.url} checked={parseInt(data[\"VerifyEnabled\"])} title=\"Transcript Tickets\" text=\"Transcript your tickets and send it to a Discord channel\" color=\"#3D3A3A\" font=\"white\"/>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={12}>\r\n          <Categories url={props.url} Roles={props.Roles} OpenedTickets={props.OpenedTickets} TicketsCategories={props.TicketsCategories}/>\r\n        </Grid>\r\n\r\n\r\n\r\n\r\n      </Grid>\r\n\r\n}\r\n\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n","import { React, useCallback, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Content from '../components/Dashboard';\r\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom'\r\nimport Plugins from '../components/Plugins';\r\nimport NavBar from '../components/NavBar';\r\nimport Tickets from '../components/Tickets';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChart';\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\n\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    type: 'dark',\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(7),\r\n  },\r\n    menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nexport default function DrawerNav(props) {\r\n\r\n  const[message, setMessage] = useState([])\r\n\r\n\r\n  const test = {\"Channels\":14,\"GuildName\":\"SpartBot Support\",\"Members\":11}\r\n\r\n\r\n\r\n\r\n  const darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n  });\r\n\r\n  const navStyle = {\r\n    color: \"white\",\r\n    textDecoration: 'none'\r\n\r\n\r\n\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = useState(true);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const { history } = props;\r\n  const itemsList = [\r\n    {\r\n      text: \"Dashboard\",\r\n      icon: <InsertChartIcon />,\r\n      onClick: () => history.push(\"/dashboard/\" + props.match.params.id + \"/\")\r\n    },\r\n    {\r\n      text: \"Plugins\",\r\n      icon: <TuneIcon />,\r\n      onClick: () => history.push(`/dashboard/${props.match.params.id}/plugins/` )\r\n    },\r\n    {\r\n      text: \"Tickets\",\r\n      icon: <MailIcon />,\r\n      onClick: () => history.push(`/dashboard/${props.match.params.id}/tickets/` )\r\n    }\r\n  ];\r\n  const[data, setData] = useState([])\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n\r\n    const getData = async () =>{\r\n      setLoading(true);\r\n      const response = await fetch(`/api/dashboard/${props.match.params.id}/`)\r\n      const response_json = await response.json()\r\n      if(response_json.type == \"not logged\"){\r\n        window.location.href = \"/api/login/\";\r\n      }\r\n      else if(response_json.type == \"no permissions\"){\r\n        window.location.href = \"/\"\r\n      }\r\n      else{\r\n        setData(response_json)\r\n        console.log(response_json)\r\n      }\r\n      setLoading(false)\r\n  \r\n    }\r\n    getData()\r\n  }, [props.match.params.id])\r\n\r\n\r\n  \r\n  return (\r\n\r\n    <ThemeProvider theme={darkTheme}>\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <div className={classes.drawerContainer}>\r\n          <List>\r\n            {itemsList.map((item, index) => {\r\n              const { text, icon, onClick } = item;\r\n              return (\r\n                <ListItem button key={text} onClick={onClick}>\r\n                  {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n        </List>\r\n          <Divider />\r\n          <List>\r\n            {['Documentation', 'About'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Toolbar />\r\n        < Switch>\r\n        <Route exact path=\"/dashboard/:id/\" component={() => <Content loading={loading} GuildName={data[\"GuildName\"]} GuildMembers={data[\"Members\"]} GuildChannels={data[\"NumberOfChannels\"]}/>} />\r\n\r\n        <Route path=\"/dashboard/:id/plugins\" component={() => <Plugins url={props.match.params.id} Roles={data[\"Roles\"]} Channels={data[\"Channels\"]} Categories={data[\"Categories\"]} VerifyEnabled={data[\"VerifyEnabled\"]} TicketsEnabled={data[\"TicketsEnabled\"]} ShowcaseEnabled={data[\"ShowcaseEnabled\"]} ActiveInactiveEnabled={data[\"ActiveInactiveEnabled\"]}/>}/>\r\n        <Route path=\"/dashboard/:id/tickets\" component={() => <Tickets url={props.match.params.id} OpenedTickets={data[\"OpenedTickets\"]} TicketsCategories={data[\"TicketsCategories\"]} Roles={data[\"Roles\"]} Channels={data[\"Channels\"]} Categories={data[\"Categories\"]} TicketsEnabled={data[\"TicketsEnabled\"]} TicketsEnabled={data[\"TicketsEnabled\"]} ShowcaseEnabled={data[\"ShowcaseEnabled\"]} ActiveInactiveEnabled={data[\"ActiveInactiveEnabled\"]}/>}/>\r\n        </ Switch>\r\n\r\n      </main>\r\n    </div>\r\n    </ThemeProvider>\r\n  );\r\n}","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Card, Typography, CardContent, CardActions, CardMedia} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useFirebaseBtnStyles } from '@mui-treasury/styles/button/firebase';\r\nimport { usePushingGutterStyles } from '@mui-treasury/styles/gutter/pushing';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ServerSelector(props){\r\n\r\n    const useStyles = makeStyles((theme) =>({\r\n      root:{\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        marginTop: 21,\r\n        height: \"100px\",\r\n\r\n        textAlign: \"center\",\r\n        background: props.backgroundColor\r\n      },\r\n      text:{\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        \r\n        marginLeft: 15\r\n      },\r\n      title:{\r\n        marginTop: 15,\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n\r\n        textAlign: \"left\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 22,\r\n        color: props.font\r\n      },\r\n      cover: {\r\n        width: 151,\r\n      },\r\n      button:{\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        textAlign: \"right\",\r\n        alignItems: 'center',\r\n        paddingLeft: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n        margintLeft: 15\r\n\r\n\r\n      },\r\n      media: {\r\n          \r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n        marginLeft: \"1.5%\",\r\n        borderRadius: \"50%\",\r\n        height: \"64px\",\r\n        width: \"64px\"\r\n\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n      },\r\n  \r\n    }));\r\n  \r\n    const clases=useStyles();\r\n    const styles = useFirebaseBtnStyles();\r\n    const gutterStyles = usePushingGutterStyles();\r\n\r\n    const greenTheme = createMuiTheme({ palette: { \r\n      primary: {\r\n          main: \"#00e676\",\r\n          contrastText: \"#fff\"\r\n      } }})\r\n\r\n    return(\r\n      <Card className={clases.root}>\r\n                  <CardMedia\r\n        className={clases.media}\r\n        image= {props.image}\r\n        title=\"Server Image\"\r\n      /> \r\n      <div className={clases.details}>\r\n        <CardContent>\r\n          <Typography className={clases.title}>\r\n            {props.title}\r\n          </Typography>\r\n\r\n        </CardContent>\r\n      </div>\r\n      <CardActions >\r\n      <ThemeProvider theme={greenTheme}>\r\n        {props.linkto &&\r\n        <Link style={{ textDecoration: 'none', color:\"white\" }} to={props.linkto}>\r\n        <Button component=\"a\" href={props.externallinkto} size=\"large\" className={clases.button} classes={styles} variant={props.buttonVariant} color=\"primary\">\r\n            <div className={clases.text}>\r\n            {props.text}\r\n            </div>\r\n          </Button>\r\n          </Link>\r\n        }\r\n        {!props.linkto &&\r\n        <Button component=\"a\" href={props.externallinkto} size=\"large\" className={clases.button} classes={styles} variant={props.buttonVariant} color=\"primary\">\r\n          <div className={clases.text}>\r\n            {props.text}\r\n          </div>\r\n        </Button>}\r\n        \r\n      </ThemeProvider>\r\n      </CardActions>\r\n\r\n \r\n      </Card>\r\n    \r\n  \r\n  \r\n    );\r\n  }\r\n  \r\n  export default ServerSelector;\r\n  ","import { React, useCallback, useEffect, useState } from 'react';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport NavBar from '../components/NavBar';\r\nimport ServerSelector from '../components/ServerSelector';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport { DisappearedLoading } from 'react-loadingg';\r\nimport { Scrollbar } from \"react-scrollbars-custom\";\r\n\r\nconst darkTheme = createMuiTheme({\r\n    palette: {\r\n      type: 'dark',\r\n    },\r\n    });\r\n\r\nconst UseStyles = makeStyles((theme) => ({\r\n    root:{\r\n        flexGrow: 1\r\n    },\r\n    icons:{\r\n        color: \"white\"\r\n    },\r\n    containerGraphics:{\r\n        marginTop: '200px'\r\n    },\r\n    containerTable:{\r\n        marginTop: '40px'\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(24),\r\n      },\r\n    \r\n    \r\n    \r\n    \r\n    }));\r\n\r\n    \r\n\r\nexport  default function SelectServer(){\r\n    const clases= UseStyles();\r\n\r\n\r\n    const [data, setData] = useState({})\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n    const tifOptions = [];\r\n\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const getData = async () =>{\r\n            setLoading(true);\r\n            const response = await fetch(`/api/dashboard/`)\r\n            const response_json = await response.json()\r\n            if(response_json.type == \"not logged\"){\r\n                window.location.href = \"/api/login/\";\r\n\r\n            }\r\n            else{\r\n            setData(response_json)\r\n            console.log(response_json)\r\n            setLoading(false);\r\n            }\r\n          }\r\n          getData()\r\n\r\n\r\n        \r\n    }, [])\r\n\r\n\r\n    const processData = () => {\r\n        const test = {\"680843857591664879\":{\"Avatar\":\"https://www.online-tech-tips.com/wp-content/uploads/2019/09/discord.jpg\",\"Name\":\"ModGaming\"},\"743211086458650684\":{\"Avatar\":\"https://cdn.discordapp.com/icons/743211086458650684/5e48bf70aee6bb57bf90b3ede7cc78dc.png\",\"Name\":\"SpartBot Support\"}};\r\n        for(const te in data[\"mutual\"]){\r\n            tifOptions.push(<ServerSelector icon={<PeopleAltIcon className={clases.root}/>} linkto={\"/dashboard/\" + te + \"/\"} text=\"Dashboard\" image={data[\"mutual\"][te][\"Avatar\"]} title={data[\"mutual\"][te][\"Name\"]} serverid={te} description=\"9438 Users\" buttonVariant=\"contained\" backgroundColor=\"#3D3A3A\" font=\"white\"/>)\r\n        }\r\n        for(const te in data[\"unmutual\"]){\r\n            tifOptions.push(<ServerSelector icon={<PeopleAltIcon className={clases.root}/>} linkto={false} externallinkto={\"https://discord.com/oauth2/authorize?client_id=737002593510883358&scope=bot&permissions=268958800\"} text=\"Invite\" image={data[\"unmutual\"][te][\"Avatar\"]} title={data[\"unmutual\"][te][\"Name\"]} serverid={te} description=\"9438 Users\" buttonVariant=\"outlined\" backgroundColor=\"#3D3A3A\" font=\"white\"/>)\r\n        }\r\n    }  \r\n    processData()\r\n\r\n    console.log(tifOptions)\r\n        return(\r\n        <ThemeProvider theme={darkTheme}>\r\n        <Scrollbar disableTracksWidthCompensation   style={{height: 970}}>\r\n\r\n        <CssBaseline/>\r\n\r\n        <main className={clases.content}>\r\n        \r\n        <div className={clases.root}>\r\n        {loading && <DisappearedLoading size=\"large\" speed={.5} color=\"#587dd5\" style={{marginLeft: \"50%\", marginButtom: \"50%\", marginTop: \"20%\"}}/>}\r\n        {!loading &&\r\n        <Grid container spacing={4}>\r\n            <Grid item xs={24} sm={24} md={24} lg={12}>\r\n                {tifOptions}\r\n            </Grid>\r\n        </Grid>\r\n        }\r\n        </div>\r\n        </main>\r\n        </Scrollbar>\r\n        </ThemeProvider>\r\n        \r\n    );\r\n    \r\n}\r\n","export default __webpack_public_path__ + \"static/media/Panel.529f9699.png\";","export default __webpack_public_path__ + \"static/media/TicketsImage.54a3105f.png\";","export default __webpack_public_path__ + \"static/media/verify.ecc977cc.png\";","export default __webpack_public_path__ + \"static/media/showcase.be69e934.png\";","export default __webpack_public_path__ + \"static/media/discord_logo.92ad28f1.png\";","import {React} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NavBar from '../components/NavBar'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport {Card, Typography, CardContent, CardActions, CardMedia} from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport PanelImage from '../components/images/Panel.png';\r\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\r\nimport { Scrollbar } from \"react-scrollbars-custom\";\r\nimport TicketsImage from '../components/images/TicketsImage.png';\r\nimport VerifyImage from '../components/images/verify.png';\r\nimport ShowcaseImage from '../components/images/showcase.png';\r\nimport DiscordLogo from '../components/images/discord_logo.png';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemLink from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport EmailRoundedIcon from '@material-ui/icons/EmailRounded';\r\nimport QuestionAnswerRoundedIcon from '@material-ui/icons/QuestionAnswerRounded';\r\nimport HelpRoundedIcon from '@material-ui/icons/HelpRounded';\r\nimport LibraryBooksRoundedIcon from '@material-ui/icons/LibraryBooksRounded';\r\nimport StorageRoundedIcon from '@material-ui/icons/StorageRounded';\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\nimport VerifiedUserRoundedIcon from '@material-ui/icons/VerifiedUserRounded';\r\nimport ImageSearchRoundedIcon from '@material-ui/icons/ImageSearchRounded';\r\nimport EventAvailableRoundedIcon from '@material-ui/icons/EventAvailableRounded';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nexport default function landing(){\r\n\r\n    const darkTheme = createMuiTheme({\r\n        palette: {\r\n          type: 'dark',\r\n          primary: {\r\n            main: \"#5393ff\",\r\n            contrastText: \"#fff\"\r\n          }\r\n        },\r\n        });\r\n\r\n    const styles = makeStyles((theme)=>({\r\n        root:{\r\n            marginTop: 200,\r\n            marginLeft: 60,\r\n            padding: 20\r\n        },\r\n        text:{\r\n            fontWeight: 50\r\n        },\r\n        image:{\r\n            flexGrow: 1,\r\n            maxWidth: 720,\r\n            maxHeight: 370,\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                display: \"none\"\r\n              },\r\n        },\r\n        media: {\r\n            flexGrow: 1,\r\n            height: 365,\r\n        },\r\n        features:{\r\n            maxHeight: 1200,\r\n            minHeight: 480,\r\n            marginTop: 150,\r\n            padding: 20,\r\n            textAlign: \"center\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            background: \"#424242\"\r\n        },\r\n        featuresImage:{\r\n            maxWidth: 700,\r\n            maxHeight: 370,\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                display: \"none\"\r\n              },\r\n        },\r\n        featuresMedia: {\r\n            height: 300,\r\n        },\r\n        footer:{\r\n            padding: 20,\r\n            height: 300\r\n        },\r\n        footerText:{\r\n            textDecoration: `none`,\r\n            color: `white`\r\n        }\r\n\r\n    }))\r\n\r\n    const classes = styles()\r\n    return(\r\n        <ThemeProvider theme={darkTheme}>\r\n            <div>\r\n                <CssBaseline />\r\n                <Scrollbar  disableTracksWidthCompensation  style={{height: 970}}>\r\n                <div className={classes.root}>\r\n                    <Grid justify=\"space-around\" container spacing={5}>\r\n                    <Zoom in={true} style={{ transitionDelay: true ? '500ms' : '0ms' }}>\r\n                        <Grid item xs={12} sm={12} md={12} lg={6}>\r\n                            <Typography className={classes.text} variant=\"h3\" >\r\n                                Automate your Discord Server as never before!\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" style={{marginTop: 20}} >\r\n                                Configure advanced tickets, verify users, active/inactive channels and much more!\r\n                            </Typography>\r\n                            <ThemeProvider theme={darkTheme}>\r\n                                <Button href=\"https://discord.com/oauth2/authorize?client_id=737002593510883358&scope=bot&permissions=268958800\" startIcon={<AddCircleRoundedIcon/>} size=\"large\" style={{marginTop: 25}} variant=\"contained\" color=\"primary\">\r\n                                    Add to Discord\r\n                                </Button>\r\n                            <Link to=\"/servers\" style={{textDecoration: \"none\", color: \"inherit\"}}>\r\n                                <Button style={{marginTop: 25, marginLeft: 35}} size=\"large\" variant=\"contained\"  color=\"default\" href=\"#contained-buttons\">\r\n                                    Manage Servers\r\n                                </Button>\r\n                            </Link>\r\n                            </ThemeProvider>\r\n\r\n                        </Grid>\r\n                    </Zoom>\r\n                    <Grid item xs={12} sm={12} md={12} lg={5}>\r\n                    <Slide direction=\"up\" in={true} mountOnEnter unmountOnExit>\r\n\r\n                        <Card className={classes.image}>\r\n                            <CardMedia\r\n                                className={classes.media}\r\n                                image={PanelImage}\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                        </Card> \r\n                    </Slide >\r\n                    </Grid>\r\n                    </Grid>\r\n                </div>\r\n                <div className={classes.features}>\r\n                    <Grid  container spacing={2} style={{marginTop: 30}}>\r\n                        <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                            <Typography variant=\"h3\" >\r\n                                Features\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                            <ExpandMoreRoundedIcon/>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <div style={{marginTop: 50}}>\r\n                    <Grid  container spacing={5}>\r\n                    <Grid item xs={12} sm={12} md={12} lg={3}>\r\n                            <EmailRoundedIcon fontSize=\"large\"/>\r\n                            <Typography variant=\"h4\" >\r\n                                Advanced Tickets\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" style={{margintTop: 200, color:\"#b09fa5\"}}>\r\n                                Configure an advanced ticket systems, with multiple categories, different access and send the transcription to a discord channel!\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12} lg={3}>\r\n                            <VerifiedUserRoundedIcon fontSize=\"large\"/>\r\n                            <Typography variant=\"h4\" >\r\n                                Verify\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" style={{margintTop: 200, color:\"#b09fa5\"}}>\r\n                                Secure your server with an super easy to use verification system against bots!\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12} lg={3}>\r\n                            <ImageSearchRoundedIcon fontSize=\"large\"/>\r\n                            <Typography variant=\"h4\" >\r\n                                Showcase\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" style={{margintTop: 200, color:\"#b09fa5\"}}>\r\n                                Make a only-files discord channel!\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12} lg={3}>\r\n                        <EventAvailableRoundedIcon fontSize=\"large\"/>\r\n\r\n                            <Typography variant=\"h4\" >\r\n                                Active/Innactive\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" style={{margintTop: 200, color:\"#b09fa5\"}}>\r\n                            Show to your members what channels are currently active or innactive!\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n            <div style={{padding: 10, marginLeft:\"10%\"}}>\r\n                <Grid  container justify=\"center\" alignContent=\"center\" spacing={2} style={{ marginTop: 100}}>\r\n                <Grid item xs={12} sm={12} md={12} lg={6}>\r\n                            <Typography variant=\"h4\" >\r\n                                Advanced Tickets\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" style={{margintTop: 200, color:\"#b09fa5\"}}>\r\n                                Configure an advanced ticket systems, with multiple categories, different access and send the transcription to a discord channel!\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12} lg={6}>\r\n                            <Card className={classes.featuresImage}>\r\n                                <CardMedia\r\n                                    className={classes.featuresMedia}\r\n                                    image={TicketsImage}\r\n                                    title=\"Contemplative Reptile\"\r\n                                />\r\n                            </Card>                     \r\n                        </Grid>\r\n                </Grid>\r\n            </div>\r\n\r\n            <Divider style={{marginTop: 100}}/>\r\n            <div className={classes.footer}>\r\n                <Grid  container justify=\"space-around\" spacing={1}>\r\n                    <Grid item xs={12} sm={12} md={12} lg={4} style={{marginTop: 35}}>\r\n                    <Typography variant=\"h6\" style={{fontWeight: 650}} >\r\n                           SPARTBOT\r\n                    </Typography>\r\n                    <Typography variant=\"h7\" style={{margintTop: 200, color:\"#b09fa5\"}}>\r\n                        Copyright © 2020 SpartBot\r\n\r\n                    </Typography>    \r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={4} style={{marginTop: 35}}>\r\n                    <List component=\"nav\" aria-label=\"main mailbox folders\" style={{width: \"30%\"}}>\r\n                    <Link to=\"/\" className={classes.footerText}>\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <HomeRoundedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Home\" />\r\n                        </ListItem>\r\n                    </Link>\r\n                        <Link to=\"/servers\" className={classes.footerText}>\r\n                        <ListItem button >\r\n                        <ListItemIcon>\r\n                            <StorageRoundedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Servers\" />\r\n                        </ListItem>\r\n                        </Link>\r\n                        <Link component=\"a\" href=\"https://mefaltaunverano.gitbook.io/spartbot/\" className={classes.footerText}>\r\n                        <ListItem button>\r\n                        <ListItemIcon>\r\n                            <LibraryBooksRoundedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Docs\" />\r\n                        </ListItem>\r\n                        </Link>\r\n                    </List>  \r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={4} style={{marginTop: 35}}>\r\n                    <List component=\"nav\" aria-label=\"main mailbox folders\" style={{width: \"30%\"}}>\r\n                        <ListItem button component=\"a\" href=\"https://discord.com/invite/NVVdaPX\">\r\n                        <ListItemIcon>\r\n                            <QuestionAnswerRoundedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Help server\"/>\r\n                        </ListItem>\r\n                        <ListItem button component=\"a\" href=\"/servers\">\r\n                        <ListItemIcon>\r\n                            <HelpRoundedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"About\" />\r\n                        </ListItem>\r\n                        <ListItem button component=\"a\" href=\"https://discord.bio/p/mefaltaunverano\">\r\n                        <ListItemIcon>\r\n                            <EmailRoundedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Contact\" />\r\n                        </ListItem>\r\n                    </List>  \r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} style={{marginTop: 35, marginLeft: \"47%\"}}>\r\n                    <Typography variant=\"h7\" style={{margintTop: 200, color:\"#b09fa5\"}}>\r\n                        By MeFaltaUnVerano ❤️\r\n\r\n                    </Typography>  \r\n                    </Grid>\r\n                </Grid>\r\n\r\n                </div>\r\n            </Scrollbar>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}","import React from 'react';\nimport { BrowserRouter, Switch, Routes, Route, Link} from 'react-router-dom';\nimport Dashboard from '../components/Dashboard';\nimport DrawerNav from '../components/DrawerNav';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SelectServer from '../pages/SelectServer';\nimport Plugins from '../components/Plugins';\nimport NavBar from '../components/NavBar';\nimport landing from '../pages/landing';\n\nconst useStyles = makeStyles({\n  container:{\n    display: \"flex\"\n  }\n})\n\nfunction App(props){\n  const classes = useStyles();\n  return(\n\n    <BrowserRouter>\n    <Route path=\"\" component={NavBar}/>\n    < Switch>\n      <Route exact path=\"/\" component={landing}/>\n      <Route  path=\"/servers\" component={SelectServer}/>\n      <Route  path=\"/dashboard/:id/\" component={DrawerNav}/>\n      </Switch>\n    </BrowserRouter>\n  );\n\n\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './routes/Routes';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}